@using Monkey.Core.Constants
@using Puppy.Web.HtmlHelperUtils
@model Monkey.Core.Models.Auth.ClientUpdateModel
@{
    ViewData[Constants.ViewDataKey.Title] = "Owl | Portal - Client - Edit";
}

<div class="page-header">
    <h1 class="page-title">Edit Client</h1>
</div>
<div class="page-content">
    <div class="row">
        <div class="col-lg-6 center-col">
            <div class="panel">
                <div class="panel-body">
                    @using (Html.BeginForm("SubmitEdit", "Client", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(x => x.Id)

                        <div class="form-group form-material" data-plugin="formMaterial">
                            @Html.LabelFor(m => m.Name, new { @class = "form-control-label", @for = $"{nameof(Model.Name)}" })
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Name)
                        </div>

                        <div class="form-group form-material" data-plugin="formMaterial">
                            @Html.LabelFor(m => m.Domains, new { @class = "form-control-label", @for = $"{nameof(Model.Domains)}" })
                            @Html.TextBoxFor(m => m.Domains, new { @class = "form-control" })
                            <small class="text-help">@Html.DescriptionFor(model => model.Domains)</small>
                            @Html.ValidationMessageFor(model => model.Domains)
                        </div>

                        <div class="form-group form-material" data-plugin="formMaterial">
                            @Html.LabelFor(m => m.Type, new { @class = "form-control-label", @for = $"{nameof(Model.Type)}" })
                            @Html.DropDownListFor(model => model.Type, typeof(Enums.ClientType).GetEnumSelectList(Model.Type.ToString()), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Type)
                        </div>

                        <div class="checkbox-custom checkbox-primary">
                            @Html.CheckBoxFor(m => m.IsBanned, new { @class = "form-control", @checked = Model.IsBanned ? "checked" : string.Empty })
                            @Html.LabelFor(m => m.IsBanned, new { @for = $"{nameof(Model.IsBanned)}" })
                            @Html.ValidationMessageFor(model => model.IsBanned)
                        </div>

                        <div class="form-group form-material" data-plugin="formMaterial">
                            @Html.LabelFor(m => m.BannedRemark, new { @class = "form-control-label", @for = $"{nameof(Model.BannedRemark)}" })
                            @Html.TextAreaFor(m => m.BannedRemark, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.BannedRemark)
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <a class="btn btn-default ladda-button btn-block" data-style="slide-right" data-plugin="ladda" href="@Url.AbsoluteAction("Index", "Client")">
                                    <span class="ladda-label">
                                        <i class="icon md-long-arrow-left mr-10" aria-hidden="true"></i>Back
                                    </span>
                                </a>
                            </div>
                            <div class="col-md-6">
                                <button type="submit" class="btn btn-primary ladda-button btn-block" data-style="slide-right" data-plugin="ladda">
                                    <span class="ladda-label">
                                        <i class="icon md-edit mr-10" aria-hidden="true"></i>Save Changes
                                    </span>
                                </button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="col-lg-6 center-col">
            <div class="panel">
                <div class="panel-body">
                    <div class="form-group form-material" data-plugin="formMaterial">
                        @Html.LabelFor(m => m.Subject, new { @class = "form-control-label", @for = $"{nameof(Model.Name)}" })
                        @Html.TextBoxFor(m => m.Subject, new { @class = "form-control", disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.Subject)
                    </div>

                    <div class="form-group form-material" data-plugin="formMaterial">
                        @Html.LabelFor(m => m.Secret, new { @class = "form-control-label", @for = $"{nameof(Model.Name)}" })
                        @Html.TextBoxFor(m => m.Secret, new { @class = "form-control", disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.Secret)
                    </div>

                    <div class="row">
                        <div class="col-md-6 center-col">
                            <button type="button"
                                    data-plugin="confirm"
                                    data-confirm-title="ARE YOU SURE?"
                                    data-confirm-message="Are you sure that you want to generate new secret?"
                                    data-confirm-action="generateSecret('@Model.Id')"
                                    class="btn btn-primary btn-block">
                                <i class="icon md-refresh mr-10" aria-hidden="true"></i>Generate Secret
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        function generateSecret(id) {
            var url = '@Url.AbsoluteAction("GenerateSecret", "Client", new {id = "PARAMETER_ID"})';
            url = url.replace(/PARAMETER_ID/g, id);
            $.ajax({
                url: url,
                success: function(data) {
                    owl.notify("Success", "Generate new secret for the Client", "success");
                    $("#Secret").val(data.secret);
                }
            });
        }
    </script>
}