#region	License
//------------------------------------------------------------------------------------------------
// <License>
//     <Copyright> 2017 © Top Nguyen → AspNetCore → Monkey </Copyright>
//     <Url> http://topnguyen.net/ </Url>
//     <Author> Top </Author>
//     <Project> Monkey → Interface </Project>
//     <File>
//         <Name> IAuthenticationBusiness.cs </Name>
//         <Created> 17/09/17 11:57:41 PM </Created>
//         <Key> 557dffbc-8234-4c82-8670-72174f7f78bd </Key>
//     </File>
//     <Summary>
//         IAuthenticationBusiness.cs
//     </Summary>
// <License>
//------------------------------------------------------------------------------------------------
#endregion License

using Monkey.Core.Models.User;
using System.Threading.Tasks;

namespace Monkey.Authentication.Interfaces
{
    public interface IAuthenticationBusiness
    {
        /// <summary>
        ///     Check user name and password is correct, not banned and already active 
        /// </summary>
        /// <param name="userName"></param>
        /// <param name="password"></param>
        void CheckValidSignIn(string userName, string password);

        void CheckExistsBySubject(params string[] subjects);

        void CheckExistsByUserName(params string[] userNames);

        LoggedInUserModel SignIn(int clientId, string username, string password, out string refreshToken);

        Task<T> GetLoggedInUserBySubjectAsync<T>(string subject) where T : class, ILoggedInUserModel, new();

        Task<LoggedInUserModel> GetByRefreshTokenAsync(string refreshToken);

        /// <summary>
        ///     Expire all refresh token generated by sign in action, this method make user must sign
        ///     in again
        /// </summary>
        /// <param name="subject"></param>
        /// <returns></returns>
        Task ExpireAllRefreshTokenAsync(string subject);

        /// <summary>
        ///     Check refresh token is exist and not expire 
        /// </summary>
        /// <param name="clientId">    </param>
        /// <param name="refreshToken"></param>
        void CheckValidRefreshToken(int clientId, string refreshToken);
    }
}